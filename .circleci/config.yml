version: 2.1

orbs:
  codecov: codecov/codecov@4.0.1

jobs:
  build:
    docker:
      - image: maven:3.8.5-openjdk-11
    steps:
      - checkout
      - run:
          name: Maven Build
          command: mvn clean install
      - run:
          name: Run Tests
          command: mvn test
      - run:
          name: Générer le rapport Jacoco
          command: mvn jacoco:report
      - run:
          name: Télécharger le rapport sur Codecov
          command: curl -s https://codecov.io/bash | bash -s -- -t ${CODECOV_TOKEN}
      - run:
          name: Run Checkstyle
          command: mvn checkstyle:checkstyle
      - run:
          name: Vérifier le rapport Checkstyle et générer le badge
          command: |
            if grep -q "Checkstyle Violations" target/checkstyle-result.xml; then
              # Badge rouge si Checkstyle échoue
              curl -s "https://img.shields.io/badge/Checkstyle-failed-red" > checkstyle-badge.svg
            else
              curl -s "https://img.shields.io/badge/Checkstyle-passed-brightgreen" > checkstyle-badge.svg
            fi
      - run:
          name: Installer GitHub CLI
          command: |
            curl -s https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo tee /usr/share/keyrings/github.asc > /dev/null
            sudo apt update
            sudo apt install gh
      - run:
          name: Authentifier GitHub CLI
          command: echo "${GITHUB_TOKEN}" | gh auth login --with-token
      - run:
          name: Créer ou récupérer la release GitHub et uploader le badge
          command: |
            # Définir le tag de la release, vous pouvez utiliser un tag dynamique si vous voulez
            RELEASE_TAG="v1.0"  # Remplacez ceci avec le tag que vous souhaitez utiliser

            # Vérifier si la release existe déjà, sinon la créer
            if gh release view $RELEASE_TAG --json name -q '.name' > /dev/null; then
              echo "Release $RELEASE_TAG existe déjà."
            else
              echo "La release $RELEASE_TAG n'existe pas, création de la release."
              gh release create $RELEASE_TAG checkstyle-badge.svg --title "$RELEASE_TAG Release" --notes "Ajout du badge Checkstyle"
            fi

            # Uploader le badge dans la release
            gh release upload $RELEASE_TAG checkstyle-badge.svg

workflows:
  version: 2
  build_and_upload:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
